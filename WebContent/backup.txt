	test("getRowData", function() {			
				var ent = Crafty.e("2D, DOM, TiledMapBuilder");
				ent._source = getSourceOrhogonal();
				var groundLayer = ent._source.layers[0];
				
				deepEqual( ent.getRowData(0, groundLayer), [0,3,3,3,3,3,3,3,3,3] ); 
				deepEqual( ent.getRowData(1, groundLayer), [1,1,3,3,3,3,3,3,3,3] ); 
				deepEqual( ent.getRowData(2, groundLayer), [2,2,2,3,3,3,3,3,3,3] ); 
				deepEqual( ent.getRowData(3, groundLayer), [3,3,3,3,3,3,3,3,3,3] );
				deepEqual( ent.getRowData(999, groundLayer), []); 
				deepEqual( ent.getRowData(), null); 
			});
						
			test("getViewData", function() {			
				var ent = Crafty.e("2D, DOM, TiledMapBuilder");
				ent._source = getSourceOrhogonal();
				var groundLayer = ent._source.layers[0];
				
				equal( ent.getViewData(0, 0, 10, 10, groundLayer).length, 100); 
				deepEqual( ent.getViewData(0, 0, 2, 2, groundLayer), [0,3,1,1] ); 
				equal( ent.getViewData(5, 5, 5, 5, groundLayer).length, 25 ); 
				deepEqual( ent.getViewData(8, 8, 2, 2, groundLayer), [3,3,3,3] ); 					
				deepEqual( ent.getViewData(8, 8, 100, 100, groundLayer), [3,3,3,3] , "Index out of bound."); 					
				deepEqual( ent.getViewData(), []); 
			});
	
------------------------	
	/*
	* Get data from row	
	*  
	* @param {Integer} row
	* @param {Object} layer		
	* @return {Array} dataInRow - [0,1,1,1,1,0,2,1,2,2,2,1,1]	
	*/
    getRowData:function(row, layer){
    	if(isNaN(row) || !layer){
    		return null;
    	}    	    	  
    	
    	return layer.data.slice( row * this._source.width, row * this._source.width + this._source.width);
    },
      
    /*
	* Get data for view	
	*  
	* @param {Integer} startRow, 0-n
	* @param {Integer} startColumn, 0-n
	* @param {Integer} width in tile
	* @param {Integer} height in tile
	* @param {Object} layer
	* @return {Array} data - [0,1,1,1,1,0,2,1,2,2,2,1,1]	
	*/
    getViewData:function(startRow, startColumn, viewWidth, viewHeight, layer){    	    
		var data = [];
		for(var idx = startRow; idx < (startRow + viewHeight); idx++){
			data = data.concat(this.getRowData(idx, layer).slice( startColumn , startColumn + viewWidth));
		}    	
    	return data;
    },   
   
-----------------------------   
   /*
	* Get data from column	
	*  
	* @param {Integer} column
	* @param {String} layerName		
	* @return {Array} dataInColumn - [0,1,1,1,1,0,2,1,2,2,2,1,1]	
	*/
    getColumnData:function(column, layerName){
    	if(isNaN(column) || !layerName){
    		return null;
    	}
    	
    	var data = [];    	    	   
    	for(var idx = column; idx < this.getLayerFromSource(layerName).data.length; idx+=this._source.width){
    		data.push( this.getLayerFromSource(layerName).data[idx]);
    	}
    	
    	return data;
    },
    
 #--------------------
    	test("getColumnData", function() {			
				var ent = Crafty.e("2D, DOM, TiledMapBuilder");
				ent._source = getSourceOrhogonal();
				
				deepEqual( ent.getColumnData(0, 'ground'), [0,1,2,3,3,3,3,3,3,3] ); 
				deepEqual( ent.getColumnData(1, 'ground'), [3,1,2,3,3,3,3,3,3,3] ); 
				deepEqual( ent.getColumnData(2, 'ground'), [3,3,2,3,3,3,3,3,3,3] ); 
				deepEqual( ent.getColumnData(3, 'ground'), [3,3,3,3,3,3,3,3,3,3] ); 	
				deepEqual( ent.getColumnData(999, 'ground'), []); 
				deepEqual( ent.getColumnData(), null); 
			});